name: Trigger Private Workflow

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, closed, labeled]
  push:
    branches: [main]

jobs:
  trigger:
    runs-on: ubuntu-latest
    steps:
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: playwright-${{ runner.os }}-${{ hashFiles('test/Hosts.Tests/bin/Debug/net9.0/playwright.ps1') }}
        restore-keys: |
          playwright-${{ runner.os }}-

    - name: Install Playwright
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: pwsh test/Hosts.Tests/bin/Debug/net9.0/playwright.ps1 install --with-deps

    - name: Generate token
      id: generate_token
      uses: actions/create-github-app-token@v2
      with:
        app-id: ${{ secrets.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}
        repositories: ${{ secrets.WORKFLOW_REPOSITORY_NAME }}

    - name: Trigger repository dispatch on different repo
      uses: actions/github-script@v8
      with:
        github-token: ${{ steps.generate_token.outputs.token }}
        script: |
          await github.rest.repos.createDispatchEvent({
            owner: '${{ github.repository_owner }}',
            repo: '${{ secrets.WORKFLOW_REPOSITORY_NAME }}',
            event_type: 'trigger-workflow',
            client_payload: {
              "source_repo": "${{ github.repository }}",
              "ref": "${{ github.ref }}",
              "sha": "${{ github.sha }}",
              "pr_number": "${{ github.event.pull_request.number }}",
              "pr_label": "${{ github.event.label.name }}",
              "event": "${{ github.event.action}}"
            }
          });